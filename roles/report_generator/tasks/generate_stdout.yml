# roles/report_generator/tasks/generate_stdout.yml
# G√©n√©ration du r√©sum√© stdout d'ex√©cution
# Fichier manquant cr√©√© pour corriger l'erreur "Could not find specified file in role: tasks/generate_stdout"
---
- name: "Validation des variables pour la g√©n√©ration stdout"
  ansible.builtin.assert:
    that:
      - execution_report is defined
      - environment_type is defined
    fail_msg: "Les variables execution_report et environment_type sont obligatoires"

- name: "Pr√©paration des donn√©es pour le r√©sum√© stdout"
  ansible.builtin.set_fact:
    stdout_summary_data:
      environment: "{{ environment_type | upper }}"
      hostname: "{{ execution_report.hostname | default(ansible_hostname) }}"
      code_ap: "{{ execution_report.code_ap | default('N/A') }}"
      code5car: "{{ execution_report.code5car | default('N/A') }}"
      os_detected: "{{ execution_report.detected_os.distribution | default('Unknown') }} {{ execution_report.detected_os.version | default('') }}"
      middleware_list: "{{ execution_report.detected_middleware | join(', ') if execution_report.detected_middleware else 'Aucun' }}"
      filesystems_created: "{{ execution_report.filesystem_changes | length | default(0) }}"
      services_configured: "{{ execution_report.services_status | length | default(0) }}"
      execution_status: "{{ 'SUCC√àS' if execution_report.success | default(true) else '√âCHEC' }}"
      start_time: "{{ execution_report.start_time | default('N/A') }}"
      end_time: "{{ execution_report.end_time | default(ansible_date_time.iso8601) }}"
      report_path: "{{ report_dir | default('/tmp/ansible_reports') }}/execution_report_{{ execution_report.execution_id | default(ansible_date_time.epoch) }}.json"

- name: "Calcul de la dur√©e d'ex√©cution"
  ansible.builtin.set_fact:
    execution_duration: >-
      {% if execution_report.start_time is defined and execution_report.end_time is defined %}
      {% set start_timestamp = execution_report.start_time | to_datetime('%Y-%m-%dT%H:%M:%SZ') %}
      {% set end_timestamp = execution_report.end_time | to_datetime('%Y-%m-%dT%H:%M:%SZ') %}
      {% set duration_seconds = ((end_timestamp.timestamp()) - (start_timestamp.timestamp())) | int %}
      {% if duration_seconds < 60 %}
      {{ duration_seconds }}s
      {% elif duration_seconds < 3600 %}
      {{ (duration_seconds / 60) | int }}m {{ duration_seconds % 60 }}s
      {% else %}
      {{ (duration_seconds / 3600) | int }}h {{ ((duration_seconds % 3600) / 60) | int }}m
      {% endif %}
      {% else %}
      N/A
      {% endif %}
  when: execution_report.start_time is defined

- name: "G√©n√©ration du r√©sum√© stdout selon l'environnement"
  block:
    - name: "R√©sum√© stdout pour PRODUCTION"
      ansible.builtin.debug:
        msg: |
          =========================================================
          R√âSUM√â D'EX√âCUTION - ENVIRONNEMENT PRODUCTION
          =========================================================
          Serveur cible    : {{ stdout_summary_data.hostname }}
          Code AP          : {{ stdout_summary_data.code_ap }}
          Code5car         : {{ stdout_summary_data.code5car }}
          OS d√©tect√©       : {{ stdout_summary_data.os_detected }}
          Middleware       : {{ stdout_summary_data.middleware_list }}
          Filesystems cr√©√©s: {{ stdout_summary_data.filesystems_created }}
          Services configur√©s: {{ stdout_summary_data.services_configured }}
          Dur√©e d'ex√©cution: {{ execution_duration | default('N/A') }}
          Statut           : {{ stdout_summary_data.execution_status }}
          Rapport JSON     : {{ stdout_summary_data.report_path }}
          =========================================================
      when: environment_type == "PROD"
      
    - name: "R√©sum√© stdout pour ISO-PRODUCTION"
      ansible.builtin.debug:
        msg: |
          =========================================================
          R√âSUM√â D'EX√âCUTION - ENVIRONNEMENT ISO-PRODUCTION
          =========================================================
          Serveur cible    : {{ stdout_summary_data.hostname }}
          Code AP          : {{ stdout_summary_data.code_ap }}
          Code5car         : {{ stdout_summary_data.code5car }}
          OS d√©tect√©       : {{ stdout_summary_data.os_detected }}
          Middleware       : {{ stdout_summary_data.middleware_list }}
          Filesystems cr√©√©s: {{ stdout_summary_data.filesystems_created }}
          Services configur√©s: {{ stdout_summary_data.services_configured }}
          Tests ex√©cut√©s   : {{ execution_report.test_results | length | default(0) }}
          Mode test        : Activ√©
          Dur√©e d'ex√©cution: {{ execution_duration | default('N/A') }}
          Statut           : {{ stdout_summary_data.execution_status }}
          Rapport JSON     : {{ stdout_summary_data.report_path }}
          =========================================================
      when: environment_type == "ISOPROD"
      
    - name: "R√©sum√© stdout pour HORS-PRODUCTION"
      ansible.builtin.debug:
        msg: |
          =========================================================
          R√âSUM√â D'EX√âCUTION - ENVIRONNEMENT HORS-PRODUCTION
          =========================================================
          Serveur cible      : {{ stdout_summary_data.hostname }}
          Code AP            : {{ stdout_summary_data.code_ap }}
          Code5car           : {{ stdout_summary_data.code5car }}
          OS d√©tect√©         : {{ stdout_summary_data.os_detected }}
          Middleware         : {{ stdout_summary_data.middleware_list }}
          Filesystems cr√©√©s  : {{ stdout_summary_data.filesystems_created }}
          Services configur√©s: {{ stdout_summary_data.services_configured }}
          Tests ex√©cut√©s     : {{ execution_report.test_results | length | default(0) }}
          Features exp√©rim.  : {{ execution_report.experimental_features | length | default(0) }}
          Mode d√©veloppement : Activ√©
          Dur√©e d'ex√©cution  : {{ execution_duration | default('N/A') }}
          Statut             : {{ stdout_summary_data.execution_status }}
          Rapport JSON       : {{ stdout_summary_data.report_path }}
          =========================================================
      when: environment_type == "HORSPROD"

- name: "Affichage des erreurs si pr√©sentes"
  ansible.builtin.debug:
    msg: |
      ‚ö†Ô∏è  ERREURS D√âTECT√âES ({{ execution_report.errors | length }}):
      {% for error in execution_report.errors %}
      - {{ error }}
      {% endfor %}
  when: execution_report.errors is defined and execution_report.errors | length > 0

- name: "Affichage des avertissements si pr√©sents"
  ansible.builtin.debug:
    msg: |
      ‚ö†Ô∏è  AVERTISSEMENTS ({{ execution_report.warnings | length }}):
      {% for warning in execution_report.warnings %}
      - {{ warning }}
      {% endfor %}
  when: execution_report.warnings is defined and execution_report.warnings | length > 0

- name: "Affichage des prochaines √©tapes recommand√©es"
  ansible.builtin.debug:
    msg: |
      üìã PROCHAINES √âTAPES RECOMMAND√âES:
      {% if execution_report.success | default(true) %}
      ‚Ä¢ Configurer les applications m√©tiers dans l'arborescence cr√©√©e
      ‚Ä¢ Tester les scripts de d√©marrage/arr√™t cr√©√©s dans /etc/local
      ‚Ä¢ Configurer la sauvegarde applicative via TSM
      ‚Ä¢ Valider les permissions sur les r√©pertoires applicatifs
      ‚Ä¢ V√©rifier la connectivit√© des middlewares d√©tect√©s
      {% else %}
      ‚Ä¢ Analyser les erreurs dans le rapport JSON
      ‚Ä¢ Corriger les probl√®mes identifi√©s
      ‚Ä¢ Relancer le playbook apr√®s correction
      ‚Ä¢ V√©rifier les pr√©requis du serveur (SHA, vg_apps)
      {% endif %}
      {% if environment_type == "HORSPROD" %}
      ‚Ä¢ Effectuer des tests fonctionnels complets
      ‚Ä¢ Documenter les configurations de d√©veloppement
      {% endif %}

- name: "Enregistrement des informations stdout g√©n√©r√©es"
  ansible.builtin.set_fact:
    stdout_generated: true
    stdout_timestamp: "{{ ansible_date_time.iso8601 }}"
    stdout_environment: "{{ environment_type }}"