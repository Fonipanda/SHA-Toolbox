---
- name: "Initialisation du rôle ips_toolbox_launcher (variables fixes)"
  ansible.builtin.set_fact:
    launcher_component_final: "{{ launcher_component | default('system') }}"
    launcher_role_name: "ips_toolbox_launcher"

- name: "Affichage des composants détectés pour debug"
  ansible.builtin.debug:
    msg:
      - "Middlewares détectés: {{ detected_middleware_list | default([]) | join(', ') }}"
      - "Services détectés: {{ detected_services_list | default([]) | join(', ') }}"
      - "Composant launcher: {{ launcher_component_final }}"

# ===== LANCEMENT DES MIDDLEWARES DÉTECTÉS (noms de fichiers fixes) =====
- name: "Lancer la configuration WAS ND si détecté"
  ansible.builtin.include_tasks: wasnd.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    was_operation: "configure"  # STATIQUE
  when: 
    - detected_middleware_list is defined 
    - "'WebSphere_WAS_ND' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration WAS Base si détecté"
  ansible.builtin.include_tasks: wasbase.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    was_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'WebSphere_WAS_Base' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration Liberty Core si détecté"
  ansible.builtin.include_tasks: libertycore.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    liberty_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'Liberty_Core' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration Liberty Base si détecté"
  ansible.builtin.include_tasks: libertybase.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    liberty_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'Liberty_Base' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration IHS si détecté"
  ansible.builtin.include_tasks: webserver.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    ihs_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'IHS' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration Oracle si détecté"
  ansible.builtin.include_tasks: oracle.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    oracle_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'Oracle' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration SQL Server si détecté"
  ansible.builtin.include_tasks: sqlserver.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    sqlserver_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'SQLServer' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration MQ si détecté"
  ansible.builtin.include_tasks: mq.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    mq_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'MQSeries' in detected_middleware_list"
  ignore_errors: true

- name: "Lancer la configuration CFT si détecté"
  ansible.builtin.include_tasks: cft.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    cft_operation: "configure"  # STATIQUE
  when:
    - detected_middleware_list is defined
    - "'CFT' in detected_middleware_list"
  ignore_errors: true

# ===== LANCEMENT DES SERVICES DÉTECTÉS (fichiers fixes) =====
- name: "Lancer la configuration Illumio (service sécurité) si détecté"
  ansible.builtin.include_tasks: illumio.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    illumio_operation_fixed: "configure"  # STATIQUE
  when:
    - detected_services_list is defined
    - "'Illumio' in detected_services_list"
  ignore_errors: true

- name: "Lancer la configuration TSM (service sauvegarde) si détecté"
  ansible.builtin.include_tasks: tsm.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    tsm_operation_fixed: "configure"  # STATIQUE
  when:
    - detected_services_list is defined
    - "'TSM' in detected_services_list"
  ignore_errors: true

# ===== LANCEMENT DES OUTILS SYSTÈME (actions fixes) =====
- name: "Lancer la configuration système"
  ansible.builtin.include_tasks: system.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    system_operation_fixed: "status"  # STATIQUE
  when: launcher_component_final == "system"
  ignore_errors: true

- name: "Lancer la configuration des services applicatifs"
  ansible.builtin.include_tasks: services.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    services_operation_fixed: "configure"  # STATIQUE
  when: launcher_component_final == "services"
  ignore_errors: true

- name: "Lancer la configuration des toolboxes"
  ansible.builtin.include_tasks: toolboxes.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    toolboxes_operation_fixed: "configure"  # STATIQUE
  when: launcher_component_final == "toolboxes"
  ignore_errors: true

- name: "Lancer la configuration du backup"
  ansible.builtin.include_tasks: backup.yml
  vars:
    launcher_environment: "{{ launcher_environment | default(environment_type) }}"
    backup_operation_fixed: "run_incr"  # STATIQUE
  when: launcher_component_final == "backup"
  ignore_errors: true

- name: "Affichage du résumé des lancements effectués (variables statiques)"
  ansible.builtin.debug:
    msg:
      - "========================================================="
      - "RÉSUMÉ DES LANCEMENTS IPS_TOOLBOX_LAUNCHER"
      - "========================================================="
      - "Composant: {{ launcher_component_final }}"
      - "Environnement: {{ launcher_environment | default(environment_type) }}"
      - "Middlewares traités: {{ detected_middleware_list | join(', ') if detected_middleware_list | default([]) else 'Aucun' }}"
      - "Services traités: {{ detected_services_list | join(', ') if detected_services_list | default([]) else 'Aucun' }}"
      - "========================================================="
