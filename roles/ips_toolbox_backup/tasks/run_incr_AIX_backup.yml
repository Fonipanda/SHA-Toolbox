---

- name: Check tbx scripts
  ansible.builtin.find:
    paths: "/apps/toolboxes/backup_restore/scripts"
    patterns: "btsauve.ksh"
  register: tbxscrchk

- name: Check tsm installed
  ansible.builtin.find:
    paths: "/usr/tivoli/tsm/client/ba"
    patterns: "dsmc"
    recurse: yes
  register: tsmbinchk

- name: Start a TSM backup
  command: /apps/toolboxes/backup_restore/scripts/btsauve.ksh backup INCR_APPLI
  register: bkpresult
  failed_when: false
  when: tbxscrchk.matched > 0 and tsmbinchk.matched > 0 

- name: set results output for tsm applicative
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    name: results
    set_results_state:
      "{% if tsmbinchk.matched > 0 and tbxscrchk.matched > 0 %}\

        {% if bkpresult.rc == 0 %}\

          backed up\

        {% else %}\

          not backed up\

        {% endif %}\

      {% else %}\

      not backed up\

      {% endif %}"
    set_results_item: ""
    set_results_value:
      "{% if tsmbinchk.matched > 0 and tbxscrchk.matched > 0 %}\

        {% if bkpresult.rc == 0 %}\

          successfully backed up\

        {% else %}\

          failure during backup\

        {% endif %}\

      {% else %}\

        {% if tbxscrchk.matched > 0 %}\

          tsm is not installed\

        {% else %}\

          {% if tsmbinchk.matched > 0 %}\

              btsauve.ksh script was not found\

          {% else %}\

              tsm is not installed and btsauve.ksh script was not found\

          {% endif %}\

        {% endif %}\

      {% endif %}"
    set_results_component: "{{ backup_component }}"
    set_results_operation: "{{ backup_operation }}"
    set_results_role_name: "{{ backup_role_name }}"
    set_results_result_name: "{{ backup_result_name }}"
    set_results_status: "{% if tsmbinchk.matched > 0 and tbxscrchk.matched > 0 %}\

        {% if bkpresult.rc == 0 %}\

          OK\

        {% else %}\

          KO\

        {% endif %}\

      {% else %}\

      KO\

      {% endif %}"


