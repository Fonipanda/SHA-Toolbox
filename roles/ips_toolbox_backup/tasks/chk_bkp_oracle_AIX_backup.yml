---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
  that: backup_instance != ""
  msg: "backup_instance variable is missing"

- name: copy script to check oracle backup
  ansible.builtin.copy:
    src: verif_backup.ksh
    dest: /apps/toolboxes/backup_restore/scripts/verif_backup.ksh
    mode: 0755
    owner: root

- name: refresh oracle backup state
  ansible.builtin.include_role:
    name: ips_toolbox_backup
  vars:
    backup_operation: refresh_orabkp_state
    backup_instance: "{{ backup_instance }}"
    set_results_script_mode: true
  when: backup_refresh_orastate == 'yes'

- name: check backup {{ backup_instance }} for {{ backup_depth }} days
  script: check_backup_oracle.ksh {{ backup_instance }} {{ backup_depth }}
  register: check_backup_oracle
  changed_when: false
  failed_when: false

- name: set results output for check backup instance
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: "\

          {% if check_backup_oracle.rc == 0 %}\

            compliant\

          {% else %}\

            not compliant\

          {% endif %}"
    set_results_item: "{{ backup_instance }}"
    set_results_value: "{{ check_backup_oracle.stdout_lines | last }}"
    set_results_component: "{{ backup_component }}"
    set_results_operation: "{{ backup_operation }}"
    set_results_role_name: "{{ backup_role_name }}"
    set_results_result_name: "{{ backup_result_name }}"
    set_results_status: "OK"
