---

- name: copy Manage script
  copy:
    src: WAS_Manage.ksh 
    dest: "/applis/"
    mode: '0755'
  changed_when: false

- name: "checking admserver status"
  shell: "/applis/WAS_Manage.ksh status admserver"
  register: status_lib_result
  changed_when: false
  failed_when: false
  when: wasbase_ref != "yes"

- name: "checking admserver status with ref"
  shell: "/applis/WAS_Manage.ksh status_ref admserver"
  register: status_lib_result2
  changed_when: false
  failed_when: false
  when: wasbase_ref == "yes"

- set_fact:
     state_value_json: "unknown"
     final_state: "OK"

- set_fact:
     state_value_json: "admserver is STOPPED"
  when:
   - wasbase_ref != "yes"
   - "'STOPPED' in status_lib_result.stdout"

- set_fact:
     state_value_json: "admserver is STARTED"
  when:
   - wasbase_ref != "yes"
   - "'STARTED' in status_lib_result.stdout"

- set_fact:
     state_value_json: "admserver is STOPPED"
  when:
   - wasbase_ref == "yes"
   - "'STOPPED' in status_lib_result2.stdout"

- set_fact:
     state_value_json: "admserver is STARTED"
  when:
   - wasbase_ref == "yes"
   - "'STARTED' in status_lib_result2.stdout"

- set_fact:
    final_state: "KO"
  when:
    - wasbase_ref != "yes"
    - status_lib_result.rc != 0
    - "'not found' not in status_lib_result.stdout"

- set_fact:
    final_state: "KO"
  when:
    - wasbase_ref == "yes"
    - status_lib_result2.rc != 0
    - "'not found' not in status_lib_result2.stdout"

- name: set results output
  include_role:
    name: ips_toolbox_set_results
  vars:
     set_results_component: "{{ wasbase_component }}"
     set_results_operation: "{{ wasbase_operation }}"
     set_results_role_name: "{{ wasbase_role_name }}"
     set_results_result_name: "{{ wasbase_result_name }}"
     set_results_item: "admserver"
     set_results_state: "info"
     set_results_status: "{{ final_state }}"
     set_results_value: "{{ state_value_json }}" 


