---

- name: stop play when a mandatory variable is missing
  assert:
   that:
     - oracle_item != ""
   msg: "oracle_item variable is missing"

- name: check presence all instance
  shell: 'if [ "{{ oracle_item }}" = "all" ];then egrep -v "^#|^$|^\*" /etc/oratab | cut -d: -f1;else egrep -v "^#|^$|^\*" /etc/oratab | cut -d: -f1 | grep -w ^{{ oracle_item }};fi'
  register: checkPresence
  failed_when: false
  changed_when: false

- name: check ref status
  stat:
    path: /var/tmp/ora_ref_status_stopped_{{ oracle_instance }}
  register: stopped_instance
  failed_when: false
  changed_when: false
  loop: "{{ checkPresence.stdout_lines | list }}"
  loop_control:
    loop_var: oracle_instance
  when:
    - "oracle_ref == 'yes'"
    - checkPresence.rc == 0

- name: List instances to start
  set_fact:
    instance_to_start: "{{ ( instance_to_start | default([]) ) + [ testinstance._ansible_item_label ] }}"
  loop: "{{ stopped_instance.results }}"
  loop_control:
    loop_var: testinstance
  when:
    - "oracle_ref == 'yes'"
    - checkPresence.rc == 0
    - not testinstance.stat.exists

- name: List instances to start
  set_fact:
    instance_to_start: "{{ checkPresence.stdout_lines | list }}"
  when:
    - "oracle_ref == 'no'"
    - checkPresence.rc == 0

- name: start instances
  shell: /apps/toolboxes/sgbd/oracle/exploitation/start_stop/start_db.ksh -s {{ oracle_instance }}
  become: true
  become_user: oracle
  become_method: su
  become_flags: "-l"
  register: startRes
  changed_when:
    - "'started' in startRes.stdout"
    - "'already' not in startRes.stdout"
  loop: "{{ instance_to_start }}"
  loop_control:
    loop_var: oracle_instance
  when:
    - checkPresence.rc == 0
    - instance_to_start is defined
    - instance_to_start != ""

- name: state instance
  no_log: true
  set_fact:
    state_instance: "\

      {% if 'Error' in startinstances.stdout %}\

         not started\

      {% endif %}"
  loop: "{{ startRes.results }}"
  loop_control:
    loop_var: startinstances
  when:
    - checkPresence.rc == 0
    - instance_to_start is defined
    - instance_to_start != ""
    - startRes is defined

- name: set result output
  include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: "\

      {% if checkPresence.rc != 0 %}\

         not found\

      {% else %}\

         {% if instance_to_start is defined %}\

            {% if state_instance == '' %}\

               started\

            {% else %}\

               not started\

            {% endif %}\

         {% else %}\

            no instance to start\

         {% endif %}\

      {% endif %}"
    set_results_item: "\

      {% if oracle_item != 'all' %}\

         {{ oracle_item }}\

      {% else %}\

         {% if instance_to_start is defined %}\

             {{ instance_to_start }}\

         {% endif %}\

      {% endif %}"
    set_results_value: ""
    set_results_component: "{{ oracle_component }}"
    set_results_operation: "{{ oracle_operation }}"
    set_results_role_name: "{{ oracle_role_name }}"
    set_results_result_name: "{{ oracle_result_name }}"
    set_results_status: "\

      {% if checkPresence.rc != 0 %}\

         OK\

      {% else %}\

         {% if instance_to_start is defined %}\

            {% if state_instance == '' %}\

               OK\

            {% else %}\

               KO\

            {% endif %}\

         {% else %}\

            OK\

         {% endif %}\

      {% endif %}"

