---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
  that:
    - oracle_item != ""
  msg: "A mandatory variable is missing: oracle_item"

- name: Begin send backupsets on TSM
  block:

    - name: check presence instance
      shell: 'if [ "{{ oracle_item }}" = "all" ];then egrep -v "^#|^$|^\*" /etc/oratab | cut -d: -f1;else egrep -v "^#|^$|^\*" /etc/oratab | cut -d: -f1 | grep -w ^{{ oracle_item }};fi'
      register: checkPresence
      failed_when: false
      changed_when: false

    - name: send backupsets on TSM
      oracle_backup:
        action: tsm-backup
        instanceName: "{{ oracle_item }}"
      register: sendTSM
      when:
        - checkPresence.rc == 0
      changed_when: sendTSM.changed == True

    - name: working TSM backupsets backup
      ansible.builtin.set_fact:
        oracle_status: "OK"
        oracle_state: "sent"
        oracle_value: ""
      when:
        - checkPresence.rc == 0
        - sendTSM.failed == False

    - name: "{{ oracle_item }} not found"
      ansible.builtin.set_fact:
        oracle_status: "KO"
        oracle_state: "not sent"     
        oracle_value: "instance {{ oracle_item }} not found"  
      when:
        - checkPresence.rc != 0
      
  rescue:
    - name: ansible failure
      ansible.builtin.set_fact:
        oracle_status: "KO"
        oracle_value: "{% if sendTSM.message is defined %}{{ sendTSM.message }}{% else %}{{ sendTSM.msg }}{% endif %}"
        oracle_state: "not sent"
  always:
    - name: End send backupsets on TSM
      ansible.builtin.include_role:
        name: ips_toolbox_set_results
      vars:
        set_results_state: "{{ oracle_state }}"
        set_results_item: "{% if oracle_item == \"all\" %}{{ checkPresence.stdout_lines | list }}{% else %}{{ oracle_item }}{% endif %}"
        set_results_component: "{{ oracle_component }}"
        set_results_operation: "{{ oracle_operation }}"
        set_results_role_name: "{{ oracle_role_name }}"
        set_results_value: "{{ oracle_value }}"
        set_results_result_name: "{{ oracle_result_name }}"
        set_results_status: "{{ oracle_status }}"        
