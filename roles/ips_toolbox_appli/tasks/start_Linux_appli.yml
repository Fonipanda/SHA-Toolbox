---

- name: stop play when a mandatory variable is missing
  assert:
   that: appli_item != ""
   msg: "appli_item variable is missing"

- name: Check toolbox installation
  find:
    paths: "/apps/toolboxes"
    patterns: "version"
  register: tbxcheck

##########################################
- name: Check toolbox version
  shell: cat /apps/toolboxes/version | awk -F '|' '{print $2}' | sed 's/\.//g'
  register: tbxversion
  changed_when: false
  when:
    - tbxcheck.matched > 0

########
- set_fact:
    app_continue: "true"

#########
- set_fact:
    ctl_app_result: "Unknown - toolbox is not in sufficient version"
    app_continue: "False"
  when:
    - tbxversion.stdout_lines[0]|int < (1820|int)


##########################################
- name: Check Status
  shell: /apps/toolboxes/exploit/bin/exploit_app.ksh status {{ appli_item }}
  register: status_app
  changed_when: false
  ignore_errors: yes
  when:
    - app_continue == true

#########
- set_fact:
    app_continue: "{% if status_app.failed == true or 'STARTED' in status_app.stdout or 'started' in status_app.stdout %}false{% else %}true{% endif %}"
    ctl_app_result: "{% if 'started' in status_app.stdout or 'STARTED' in status_app.stdout %}started{% else %}Unknown{% endif %}"
  when:
    - app_continue == true

##########################################
- name: exploit_app.ksh start {{ appli_item }}
  shell: /apps/toolboxes/exploit/bin/exploit_app.ksh start {{ appli_item }}
  register: result_app_exploit
  ignore_errors: yes
  when:
    - app_continue == true

#########
- set_fact:
    ctl_app_result: "KO - Fail to start"
  when:
    - app_continue == true
    - result_app_exploit.rc != 0

##########################################
- name: Control Status
  shell: /apps/toolboxes/exploit/bin/exploit_app.ksh status {{ appli_item }}
  register: ctl_status_app
  changed_when: false
  ignore_errors: yes
  when:
    - app_continue == true
    - result_app_exploit.rc == 0

#########
- set_fact:
    ctl_app_result: "{% if 'started' in ctl_status_app.stdout or 'STARTED' in ctl_status_app.stdout %}started{% else %}KO{% endif %}"
  when:
    - app_continue == true
    - result_app_exploit.rc == 0

#########
- set_fact:
    ctl_app_result: "{% if 'TIMEOUT' in result_app_exploit.stdout %}timeout{% else %}unknown{% endif %}"
  when:
     - app_continue == true
     - result_app_exploit.rc != 0 


##########################################
- name: set results for APPLI
  include_role:
    name: ips_toolbox_set_results
  vars:
    name: results
    set_results_state: "{% if ctl_app_result == 'started' %}\

                            started\

                        {% else %}\

                            Unknown\

                        {% endif %}"
    set_results_item: "{{ appli_item }}"
    set_results_value: "{{ ctl_app_result }}"
    set_results_component: "{{ appli_component }}"
    set_results_operation: "{{ appli_operation }}"
    set_results_role_name: "{{ appli_role_name }}"
    set_results_result_name: "{{ appli_result_name }}"
    set_results_status: "OK"

