---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
  that: appli_item != ""
  msg: "appli_item variable is missing"

- name: exploit_app.ksh status {{ appli_item }}
  shell: /etc/local/{{ appli_item }} status 
  register: result_app_exploit
  changed_when: false

##############################

- name: reference initialization
  ansible.builtin.file:
    path: /etc/local/ref_status_{{ appli_item }}
    state: absent
  when: appli_ref == "yes" or appli_ref == "Yes"

- name: reference status
  shell: echo "STOPPED" > /etc/local/ref_status_{{ appli_item }}
  when:
  - appli_ref == "yes" or appli_ref == "Yes"
  - result_app_exploit.stdout| regex_search('STOPPED')
   

- name: set results for APPLI
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    name: results
    set_results_state: "info"
    set_results_item: "{{ appli_item }}"
    set_results_value: "{% if 'STOPPED' in result_app_exploit.stdout %}\

                        STOPPED\

                        {% elif 'STARTED' in result_app_exploit.stdout %}\

                        STARTED\

                        {% elif 'STARTING' in result_app_exploit.stdout %}\

                        STARTING\

                        {% elif 'STOPPING' in result_app_exploit.stdout %}\

                        STOPPING\

                        {% else %}\

                        UNKNOWN\

                        {% endif %}"
    set_results_component: "{{ appli_component }}"
    set_results_operation: "{{ appli_operation }}"
    set_results_role_name: "{{ appli_role_name }}"
    set_results_result_name: "{{ appli_result_name }}"
    set_results_status: "{% if result_app_exploit.rc == 0 %}\

                            OK\

                        {% else %}\

                            KO\

                        {% endif %}"

