---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
    that:
      - system_create_lvname != ""
      - system_create_fsname != ""
      - system_create_lvsize != ""
    msg: "One of this mandatory variable is missing: system_create_lvname, system_create_fsname, system_create_lvsize"
  when:
    - system_create_filename == ""

- name: stop play when incompatible variables are used
  ansible.builtin.assert:
    that:
      - system_create_lvname == ""
      - system_create_fsname == ""
      - system_create_lvsize == ""
    msg: "system_create_filename must be the only variable when it is used"
  when:
    - system_create_filename != ""

- name: set configuration file name
  ansible.builtin.set_fact:
    system_create_conffile: "/apps/toolboxes/exploit/conf/exploit_create-fs_tbxng_{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}.conf"

- name: Begin create filesystems
  block:

  - name: create configuration file
    shell: echo "{{ system_create_vg }}:{{ system_create_lvname }}:{{ system_create_fsname }}:{{ system_create_lvsize }}:{{ system_create_user }}:{{ system_create_group }}:{{ system_create_ftype }}:{{ system_create_mwtype }}" >> {{ system_create_conffile }}
    when: 
      - system_create_filename == ""
    changed_when: false
  
  - name: copy configuration file on the remote server
    ansible.builtin.copy:
      src: "{{ system_create_filename }}"
      dest: "{{ system_create_conffile }}"
      owner: 0
      group: 0
      mode: u=r,g=r,o=r
    register: copyfile
    when:
      - system_create_filename != ""
    changed_when: false
  
  - name: create filesystems
  command: "{{ item }}"
  with_items:
    - "{{ system_create_fsname }}"
    - "{{ system_create_lvname }}"
    - "{{ system_create_vgname }}"
    - "{{ system_create_lvsize }}"
    - "{{ system_create_username }}"
    - "{{ system_create_groupname }}"
  register: fs_creation_result
  ignore_errors: yes

- name: working filesystems creation
  ansible.builtin.set_fact:
    system_status: "OK"
    system_value: "{% if createfslog.message is defined %}{{ createfslog.message }}{% endif %}"
    system_state: "{% if createfslog.state is defined %}{{ createfslog.state }}{% endif %}"

  rescue:
    - name: ansible failure
      ansible.builtin.set_fact:
        system_status: "KO"
        system_value: "{% if createfslog is defined %}\

                          {% if createfslog.msg is defined %}\

                            {{ createfslog.msg }}\

                          {% endif %}\

                      {% else%}\

                          {% if copyfile is defined %}\

                            {% if copyfile.msg is defined %}\

                                {{ copyfile.msg }}\

                            {% endif %}\

                          {% endif %}\

                      {% endif %}"
        system_state: "{% if createfslog is defined %}\

                          {% if createfslog.state is defined %}\

                            {{ createfslog.state }}\

                          {% else %}\

                            Unknown\

                          {% endif %}\

                      {% else %}\

                          Unknown\

                      {% endif %}"

  always:
    - name: End filesystem creation
      ansible.builtin.include_role:
        name: ips_toolbox_set_results
      vars:
        set_results_state: "{{ system_state }}"
        set_results_item: "{% if createfslog is defined %}{% if createfslog.list_fs is defined %}{{ createfslog.list_fs }}{% endif %}{% endif %}"
        set_results_component: "{{ system_component }}"
        set_results_operation: "{{ system_operation }}"
        set_results_role_name: "{{ system_role_name }}"
        set_results_value: "{{ system_value }}"
        set_results_result_name: "{{ system_result_name }}"
        set_results_status: "{{ system_status }}"

