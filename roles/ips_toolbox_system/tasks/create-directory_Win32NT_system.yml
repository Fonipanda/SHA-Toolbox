---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
  that:
    - system_codeAP != ""
    - system_code5car != ""
  msg: "at least one mandatory variable is missing beyond: system_codeAP & system_code5car"

#---------------
# Create Application Directories
#---------------
- name: Create Application Directories
  win_shell: |
    $ErrorActionPreference = "Stop"
    [string]$Code5car="{{ system_Appli_5_car }}"
    [string]$CodeAP="{{ system_Appli_Code }}"
    [string]$Id="{{ system_Appli_id }}"
    if(-not([system.string]::IsNullOrEmpty($Id)))
    {
        $Id=$Id.Substring(3,$Id.Length -3)
    }
    [bool]$IIS=[System.Convert]::ToBoolean("{{ system_Appli_IIS }}")
    [PSObject]$Object = New-Object PSObject
    [int]$Failed=0
    [int]$Changed=0
    [string]$Message=""
    Add-Member -InputObject $Object -MemberType NoteProperty -Name code5car -Value $Code5car
    Add-Member -InputObject $Object -MemberType NoteProperty -Name codeap -Value $CodeAP
    Add-Member -InputObject $Object -MemberType NoteProperty -Name id -Value $Id
    Add-Member -InputObject $Object -MemberType NoteProperty -Name failed -Value $Failed
    Add-Member -InputObject $Object -MemberType NoteProperty -Name changed -Value $Changed
    Add-Member -InputObject $Object -MemberType NoteProperty -Name message -Value $Message
    try
    {
        if([system.string]::IsNullOrEmpty($Id))
        {
            $Folders=New-ApplicationDirectories -Code5car $Code5car -CodeAP $CodeAP -IIS:$IIS
            if(($Folders|Where-Object {$_.state -eq "Create"}|Measure-Object).Count -ne 0)
            {
                $Object.changed=1
            }
        }
        else
        {
            $Folders=New-ApplicationDirectories -Code5car $Code5car -CodeAP $CodeAP -Id $Id -IIS:$IIS
            if(($Folders|Where-Object {$_.state -eq "Create"}|Measure-Object).Count -ne 0)
            {
                $Object.changed=1
            }
        }
    }
    catch
    {
        $Message="$($_.Exception.Message)"
        $Object.failed=1
        $Object.message=$Message
        #Write-Error $Message    
    }
    finally
    { 
        clear
        $Object|ConvertTo-Json -Depth 99
    }
  register: result
  changed_when: (result.stdout | from_json).changed
  ignore_errors: yes

- name: set results Create Application Directories
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state:
      "{% if (result.stdout | from_json).failed == False %}\

        created\

      {% else %}\

        not created\

      {% endif %}"
    set_results_item: ""
    set_results_value: ""
    set_results_component: "{{ system_component }}"
    set_results_operation: "{{ system_operation }}"
    set_results_role_name: "{{ system_role_name }}"
    set_results_result_name: "{{ system_result_name }}"
    set_results_status:
      "{% if (result.stdout | from_json).failed == False %}\

        OK\

      {% else %}\

        KO\

      {% endif %}"

