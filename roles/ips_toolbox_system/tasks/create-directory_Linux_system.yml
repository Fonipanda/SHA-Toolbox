---
# roles/ips_toolbox_system/tasks/create-directory_Linux_system.yml
# Création de l'arborescence applicative via le script Toolbox exploit_arbo-app.ksh

- name: "Vérification des variables obligatoires"
  ansible.builtin.assert:
    that:
      - system_codeAP is defined
      - system_codeAP != ""
      - system_code5car is defined
      - system_code5car != ""
    fail_msg: |
      ❌ Variables obligatoires manquantes :
      - system_codeAP: {{ system_codeAP | default('NON DÉFINI') }}
      - system_code5car: {{ system_code5car | default('NON DÉFINI') }}
      
      Ces variables doivent être renseignées dans le Survey AAP2.
    success_msg: |
      ✅ Variables obligatoires présentes :
      - system_codeAP: {{ system_codeAP }}
      - system_code5car: {{ system_code5car }}

- name: "Affichage de la configuration"
  ansible.builtin.debug:
    msg:
      - "=== Création arborescence applicative via Toolbox ==="
      - "Code Application: {{ system_Appli_Code }}"
      - "Code 5 caractères: {{ system_Appli_5_car }}"
      - "Instance ID: {{ system_Appli_id | default('id=01') }}"
      - "Volume Group: {{ system_Appli_vg | default('vg=vg_apps') }}"
      - "Script Toolbox: /apps/toolboxes/exploit/bin/exploit_arbo-app.ksh"

- name: "Vérification de la présence de la Toolbox"
  ansible.builtin.find:
    paths: "/apps/toolboxes/exploit/bin"
    patterns: "exploit_arbo-app.ksh"
  register: tbxcheck

- name: "Vérification de la version de la Toolbox"
  ansible.builtin.shell: |
    cat /apps/toolboxes/version | awk -F '|' '{print $2}' | sed 's/\.//g'
  register: tbxversion
  changed_when: false
  when:
    - tbxcheck.matched > 0

- name: "Affichage de la version Toolbox"
  ansible.builtin.debug:
    msg:
      - "Toolbox trouvée: {{ 'OUI ✅' if tbxcheck.matched > 0 else 'NON ❌' }}"
      - "Version: {{ tbxversion.stdout_lines[0] if tbxversion.stdout_lines is defined else 'N/A' }}"
      - "Version minimale requise: 1820 (18.2.0)"

- name: "Vérification que la version est suffisante"
  ansible.builtin.assert:
    that:
      - tbxcheck.matched > 0
      - tbxversion.stdout_lines[0] | int >= 1820
    fail_msg: |
      ❌ Toolbox non trouvée ou version insuffisante
      Version actuelle: {{ tbxversion.stdout_lines[0] | default('N/A') }}
      Version minimale: 1820 (18.2.0)
    success_msg: |
      ✅ Toolbox présente et version suffisante
      Version: {{ tbxversion.stdout_lines[0] }}

- name: "Création de l'arborescence applicative via script Toolbox"
  ansible.builtin.shell: |
    /apps/toolboxes/exploit/bin/exploit_arbo-app.ksh \
      codeAP={{ system_Appli_Code }} \
      code5car={{ system_Appli_5_car }} \
      {{ system_Appli_id }} \
      {{ system_Appli_vg }} \
      {{ system_Appli_lv }} \
      {{ system_Appli_lvex }}{{ system_Appli_lvex1 }}{{ system_Appli_lvex2 }} \
      {{ system_Appli_user }}
  register: resultarbo
  ignore_errors: yes
  changed_when:
    - '"-I- Creation du FS" in resultarbo.stdout'
    - resultarbo.rc == 0
  when:
    - tbxversion.stdout_lines[0] | int >= 1820

- name: "Affichage du résultat de création"
  ansible.builtin.debug:
    msg:
      - "=== Résultat création arborescence ==="
      - "{{ resultarbo.stdout_lines if resultarbo.stdout_lines is defined else ['Erreur lors de la création'] }}"

- name: "Vérification de la présence des filesystems créés"
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - "/applis/{{ system_Appli_Code }}-{{ system_Appli_5_car }}-{{ system_iis | default('01') }}"
    - "/applis/shared"
    - "/applis/logs"
    - "/applis/delivery"
  register: filesystem_check
  when:
    - resultarbo.rc is defined
    - resultarbo.rc == 0

- name: "Affichage de la vérification des filesystems"
  ansible.builtin.debug:
    msg:
      - "=== Vérification filesystems créés ==="
      - "{% for result in filesystem_check.results %}{{ result.item }}: {{ 'Présent ✅' if result.stat.exists else 'Absent ❌' }}{% endfor %}"
  when:
    - filesystem_check.results is defined

- name: "Enregistrement du résultat de création d'arborescence"
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: "{{ 'created' if (resultarbo.rc is defined and resultarbo.rc == 0) else 'failed' }}"
    set_results_item: "arborescence"
    set_results_value: "Arborescence {{ system_Appli_Code }}-{{ system_Appli_5_car }}-{{ system_iis | default('01') }}"
    set_results_component: "{{ system_component | default('system') }}"
    set_results_operation: "{{ system_operation | default('create-directory') }}"
    set_results_role_name: "{{ system_role_name | default('ips_toolbox_system') }}"
    set_results_result_name: "{{ system_result_name | default('create_directory') }}"
    set_results_status: "{{ 'OK' if (resultarbo.rc is defined and resultarbo.rc == 0) else 'KO' }}"
  ignore_errors: yes

