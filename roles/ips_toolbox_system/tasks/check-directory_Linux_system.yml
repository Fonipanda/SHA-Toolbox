---

- name: sanity check for fs
  shell: /apps/sys/sanity/bin/sanity-check.sh -f all -y fs
  register: sanityresult
  changed_when: false
  ignore_errors: yes

- name: sanity check result
  shell: /apps/sys/sanity/bin/sanity-check.sh -d csv
  changed_when: false
  register: sanitycsv

- name: init Json
  set_fact:
    tmp_json: ""

- name: Format to Json
  set_fact:
    tmp_json: "{{ tmp_json }}, { \"code\": \"{{ item.split('|')[0] }}\" ,\"instance\": \"{{ item.split('|')[1] }}\",\"parameter\": \"{{ item.split('|')[2] }}\" ,\"actualvalue\": \"{{ item.split('|')[3] }}\" ,\"refvalue\": \"{{ item.split('|')[4] }}\" ,\"count\": \"{{ item.split('|')[5] }}\" }"
  when: item.split('|')[1].startswith('/')
  with_items: "{{ sanitycsv.stdout_lines }}"

- name: End Json
  set_fact:
    tmp_json2: "[ {{ tmp_json[1:] }} ]"

- name: set result output
  include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state:
     "{% if sanityresult.rc == 0 %}\

         {% if tmp_json2 != [] %}\

            anomalie detected\

         {% else %}\

            no anomalie detected\

         {% endif %}\

      {% else %}\

         not executed\

      {% endif %}"
    set_results_item: ""
    set_results_value: "{{ tmp_json2 | to_json | from_json }}"
    set_results_component: "{{ system_component }}"
    set_results_operation: "{{ system_operation }}"
    set_results_role_name: "{{ system_role_name }}"
    set_results_result_name: "{{ system_result_name }}"
    set_results_status:
     "{% if sanityresult.rc == 0 %}\

         OK\

      {% else %}\

         KO\

      {% endif %}"

