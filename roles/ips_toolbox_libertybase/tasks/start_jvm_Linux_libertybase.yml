---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
  that:
    - libertybase_item != ""
  msg: "libertybase_item variable is missing"

- name: copy Manage script
  ansible.builtin.copy:
    src: WAS_Manage.ksh 
    dest: "/applis/"
    mode: '0755'
  changed_when: false

- name: copy Manage script2
  ansible.builtin.copy:
    src: wasstartstop_cmd.ksh
    dest: "/applis/"
    mode: '0755'
  changed_when: false

- name: "starting {{ libertybase_item }}"
  shell: "/applis/wasstartstop_cmd.ksh start wlb {{ libertybase_item }}"
  register: start_lib_result
  changed_when: "'successfully' in start_lib_result.stdout"
  failed_when: false
  when: libertybase_ref != "yes"

- name: "starting {{ libertybase_item }} with ref"
  shell: "/applis/wasstartstop_cmd.ksh start_ref wlb {{ libertybase_item }}"
  register: start_lib_result2
  changed_when: "'successfully' in start_lib_result2.stdout"
  failed_when: false
  when: libertybase_ref == "yes"

- set_fact:
    state_value_json: ""
    final_state: "unknown"
    final_status: "OK"

- set_fact:
    state_value_json: "not started"
    final_status: "KO"
  when:
  - libertybase_ref != "yes"
  - "'No JVM found' in start_lib_result.stdout"

- set_fact:
    state_value_json: "not started"
    final_status: "KO"
  when:
  - libertybase_ref == "yes"
  - "'No JVM found' in start_lib_result2.stdout"

- set_fact:
    state_value_json: "{% if line_json.split(' ')[-1] != \"service\" %}{{ state_value_json }}, { \"application_server\": \"{{ line_json.split(' ')[1] }}\" ,\"service\": \"no\" ,\"status\": \"{% if line_json.split(' ')[4] == \"STARTED\" %}started\"{% else %}not started\"{% endif %} }{% else %}{{ state_value_json }}, { \"application_server\": \"{{ line_json.split(' ')[1] }}\" ,\"service\": \"{{ line_json.split(' ')[7] }}\" ,\"status\": \"{% if line_json.split(' ')[4] == \"STARTED\" %}started\"{% else %}not started\"{% endif %} }{% endif %}"
  loop: "{{ start_lib_result.stdout_lines }}"
  loop_control:
    loop_var: line_json
  when:
  - libertybase_ref != "yes"
  - "'No JVM found' not in start_lib_result.stdout"

- set_fact:
    state_value_json: "{% if line_json.split(' ')[-1] != \"service\" %}{{ state_value_json }}, { \"application_server\": \"{{ line_json.split(' ')[1] }}\" ,\"service\": \"no\" ,\"status\": \"{% if line_json.split(' ')[4] == \"STARTED\" %}started\"{% else %}not started\"{% endif %} }{% else %}{{ state_value_json }}, { \"application_server\": \"{{ line_json.split(' ')[1] }}\" ,\"service\": \"{{ line_json.split(' ')[7] }}\" ,\"status\": \"{% if line_json.split(' ')[4] == \"STARTED\" %}started\"{% else %}not started\"{% endif %} }{% endif %}"
  loop: "{{ start_lib_result2.stdout_lines }}"
  loop_control:
    loop_var: line_json
  when:
  - libertybase_ref == "yes"
  - "'No JVM found' not in start_lib_result2.stdout"

- set_fact:
    final_state: "started"
  when: "'not started' not in state_value_json"

- set_fact:
    final_state: "not started"
  when: "'not started' in state_value_json"

- set_fact:
    final_status: "KO"
  when:
  - libertybase_ref != "yes"
  - start_lib_result.rc != 0
  - "'No JVM found' not in start_lib_result.stdout"

- set_fact:
    final_status: "KO"
  when:
  - libertybase_ref == "yes"
  - start_lib_result2.rc != 0
  - "'No JVM found' not in start_lib_result2.stdout"

- name: set results output
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_component: "{{ libertybase_component }}"
    set_results_operation: "{{ libertybase_operation }}"
    set_results_role_name: "{{ libertybase_role_name }}"
    set_results_result_name: "{{ libertybase_result_name }}"
    set_results_item: "{{ libertybase_item }}"
    set_results_state: "{{ final_state }}"
    set_results_status: "{{ final_status }}"
    set_results_value: "{% if libertybase_ref != 'yes' %}\

                          {% if 'No JVM found' in start_lib_result.stdout %}\

                            application server not found\

                          {% else %}\

                            [ {{ state_value_json[1:] }} ]\

                          {% endif %}\

                        {% else %}\

                          {% if 'No JVM found' in start_lib_result2.stdout %}\

                            application server not found\

                          {% else %}\

                            [ {{ state_value_json[1:] }} ]\

                          {% endif %}\

                        {% endif %}"

