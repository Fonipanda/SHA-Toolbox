---

- name: Check toolbox installation
  find:
    paths: "/apps/toolboxes"
    patterns: "version"
  register: tbxcheck

- name: Check toolbox version
  shell: cat /apps/toolboxes/version | awk -F '|' '{print $2}'
  register: tbxversion
  when: tbxcheck.matched > 0
  changed_when: false

- name: Format to Json when toolbox is installed
  set_fact:
    tmp_json: "{ \"installed\": \"yes\" ,\"version\": \"{{ tbxversion.stdout }}\" }"
  when: tbxcheck.matched > 0

- name: Format to Json when toolbox is not installed
  set_fact:
    tmp_json: "{ \"installed\": \"no\" ,\"version\": \"\" }"
  when: tbxcheck.matched < 1

- name: Set result output for toolbox check
  include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: "info"
    set_results_item: ""
    set_results_value: "{{ tmp_json | to_json | from_json }}"
    set_results_component: "{{ toolboxes_component }}"
    set_results_operation: "{{ toolboxes_operation }}"
    set_results_role_name: "{{ toolboxes_role_name }}"
    set_results_result_name: "{{ toolboxes_result_name }}"
    set_results_status:
      "{% if tbxcheck.matched > 0 %}\

         {% if tbxversion.stdout == '' %}\

            KO\

         {% else %}\

            OK\

         {% endif %}\

       {% else %}\

          OK\

       {% endif %}"

- name: Handle errors
  block:
    - name: Check for errors in previous tasks
      fail:
        msg: "An error occurred during toolbox check."
      when: tbxcheck.failed or tbxversion.failed
