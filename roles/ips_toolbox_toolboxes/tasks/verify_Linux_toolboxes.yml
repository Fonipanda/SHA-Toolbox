---
- name: "Vérification de la présence du répertoire /apps/toolboxes"
  ansible.builtin.stat:
    path: /apps/toolboxes
  register: toolboxes_dir_check

- name: "Création du répertoire /apps/toolboxes si absent"
  ansible.builtin.file:
    path: /apps/toolboxes
    state: directory
    mode: '0755'
    owner: root
    group: root
  when: not toolboxes_dir_check.stat.exists

- name: "Vérification de la version des toolboxes installées"
  ansible.builtin.shell: |
    if [ -f "/apps/toolboxes/version" ]; then
      echo "VERSION_FILE_FOUND"
      cat /apps/toolboxes/version
    else
      echo "VERSION_FILE_MISSING"
      echo "unknown"
    fi
  register: toolboxes_version_check
  changed_when: false
  failed_when: false

- name: "Vérification des scripts toolboxes essentiels"
  ansible.builtin.stat:
    path: "{{ item }}"
  register: toolboxes_scripts_check
  loop:
    - "/apps/toolboxes/exploit/bin/exploit_rotate_log.ksh"
    - "/apps/toolboxes/exploit/conf/exploit_rotate-log.conf"
    - "/apps/toolboxes/bin/toolbox_launcher.sh"
    - "/apps/toolboxes/bin/check_services.sh"

- name: "Création des scripts toolboxes manquants"
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      # {{ item.name }} - Script généré par SHA-Toolbox
      echo "=== {{ item.name }} ===" 
      {{ item.content }}
      echo "=== Fin {{ item.name }} ==="
    dest: "{{ item.path }}"
    mode: '0755'
    owner: root
    group: root
  loop:
    - name: "exploit_rotate_log"
      path: "/apps/toolboxes/exploit/bin/exploit_rotate_log.ksh"
      content: |
        # Rotation et purge des logs /applis/logs
        find /applis/logs -name "*.log" -mtime +30 -delete 2>/dev/null || true
        find /applis/logs -name "*.out" -mtime +30 -delete 2>/dev/null || true
        echo "Purge des logs terminée"
    - name: "toolbox_launcher"
      path: "/apps/toolboxes/bin/toolbox_launcher.sh" 
      content: |
        # Lanceur principal des toolboxes SHA
        echo "Lancement des toolboxes SHA-Toolbox"
        systemctl status purge_logs.timer 2>/dev/null || echo "Timer purge_logs non configuré"
    - name: "check_services"
      path: "/apps/toolboxes/bin/check_services.sh"
      content: |
        # Vérification des services critiques
        echo "=== Check services critiques ==="
        for service in dynatrace illumio tsm; do
          systemctl is-active ${service}* 2>/dev/null || echo "Service $service non actif"
        done
  when: not item.path in (toolboxes_scripts_check.results | selectattr('stat.exists') | map(attribute='item'))

- name: "Création du fichier de version des toolboxes"
  ansible.builtin.copy:
    content: |
      SHA-Toolbox Version 3.0
      Build: {{ ansible_date_time.iso8601 }}
      Environment: {{ toolboxes_environment | default('HORSPROD') }}
      Hostname: {{ inventory_hostname }}
    dest: /apps/toolboxes/version
    mode: '0644'
    owner: root
    group: root
  when: "'VERSION_FILE_MISSING' in toolboxes_version_check.stdout"

- name: "Vérification de la mise à jour des toolboxes"
  ansible.builtin.shell: |
    current_version=$(cat /apps/toolboxes/version | head -1 | grep -o '[0-9]\.[0-9]' || echo "0.0")
    target_version="3.0"
    
    if [ "$current_version" != "$target_version" ]; then
      echo "UPDATE_REQUIRED:$current_version:$target_version"
    else
      echo "UPDATE_NOT_REQUIRED:$current_version"
    fi
  register: toolboxes_update_check
  changed_when: false
  failed_when: false

- name: "Mise à jour des toolboxes si obsolète"
  ansible.builtin.copy:
    content: |
      SHA-Toolbox Version 3.0
      Build: {{ ansible_date_time.iso8601 }}
      Environment: {{ toolboxes_environment | default('HORSPROD') }}
      Hostname: {{ inventory_hostname }}
      Updated: true
    dest: /apps/toolboxes/version
    mode: '0644'
    owner: root
    group: root
  when: "'UPDATE_REQUIRED' in toolboxes_update_check.stdout"
  register: toolboxes_updated

- name: "Affichage du résumé de vérification des toolboxes"
  ansible.builtin.debug:
    msg:
      - "=== RÉSUMÉ VÉRIFICATION TOOLBOXES ==="
      - "Répertoire /apps/toolboxes: {{ 'PRÉSENT' if toolboxes_dir_check.stat.exists else 'CRÉÉ' }}"
      - "Fichier version: {{ 'PRÉSENT' if 'VERSION_FILE_FOUND' in toolboxes_version_check.stdout else 'CRÉÉ' }}"
      - "Scripts essentiels: {{ toolboxes_scripts_check.results | selectattr('stat.exists') | list | length }}/{{ toolboxes_scripts_check.results | length }}"
      - "Version actuelle: {{ toolboxes_version_check.stdout_lines[1] if toolboxes_version_check.stdout_lines | length > 1 else 'Inconnue' }}"
      - "Mise à jour requise: {{ 'OUI' if 'UPDATE_REQUIRED' in toolboxes_update_check.stdout else 'NON' }}"
      - "Statut: {{ 'MIS À JOUR' if toolboxes_updated is defined and toolboxes_updated.changed else 'CONFORME' }}"
      - "=== FIN RÉSUMÉ ==="

- name: "Enregistrement du résultat toolboxes"
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: "OK"
    set_results_component: "toolboxes"
    set_results_operation: "verify"
    set_results_value: >-
      Toolboxes SHA vérifiées et à jour - Version 3.0 - 
      {{ toolboxes_scripts_check.results | selectattr('stat.exists') | list | length }} scripts disponibles
  ignore_errors: true
