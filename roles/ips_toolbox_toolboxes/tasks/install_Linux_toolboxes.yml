---

- name: update toolbox
  script: update_kmo.ksh {{ toolboxes_install_directory }} yes {{ toolboxes_version }} {{ toolboxes_repo_url }}
  register: updatekmoscript
  changed_when: '"already the" not in updatekmoscript.stdout'
  failed_when: false

- set_fact:
    state_value_json: ""

- set_fact:
    state_value_json: "{{ updatekmoscript.stdout_lines | select('match','.*ERROR :.*') | list }}"

- name: Check toolbox version after upgrade
  shell: test -f /apps/toolboxes/version && cat /apps/toolboxes/version | awk -F '|' '{print $2}' || echo "0"
  register: tbxversion_last_version
  changed_when: false
  when: updatekmoscript.rc == 0

- name: set result output
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state:
          "{% if updatekmoscript.rc == 0 %}\

            installed\

          {% else %}\

            error while installing\

          {% endif %}"
    set_results_item: "{{ inventory_hostname }}"
    set_results_value: "{% if updatekmoscript.rc != 0 %}\

                          {{ state_value_json }}\

                      {% else %}\

                          current installed version is {{ tbxversion_last_version.stdout }}\

                      {% endif %}"
    set_results_component: "{{ toolboxes_component }}"
    set_results_operation: "{{ toolboxes_operation }}"
    set_results_role_name: "{{ toolboxes_role_name }}"
    set_results_result_name: "{{ toolboxes_result_name }}"
    set_results_status:
      "{% if updatekmoscript.rc == 0 %}\

            OK\

          {% else %}\

            KO\

      {% endif %}"

