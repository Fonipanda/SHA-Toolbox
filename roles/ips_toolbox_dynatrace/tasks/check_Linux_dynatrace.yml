---
# roles/ips_toolbox_dynatrace/tasks/check_Linux_dynatrace.yml
# Vérification et configuration de Dynatrace OneAgent

- name: "Vérification de l'existence de l'agent Dynatrace"
  ansible.builtin.stat:
    path: "/apps/dynatrace/oneagent/agent/tools/oneagentctl"
  register: dynatrace_agent_check

- name: "Affichage du statut de détection Dynatrace"
  ansible.builtin.debug:
    msg:
      - "=== Vérification Dynatrace OneAgent ==="
      - "Agent installé: {{ 'OUI ✅' if dynatrace_agent_check.stat.exists else 'NON ❌' }}"
      - "Chemin: /apps/dynatrace/oneagent/agent/tools/oneagentctl"

- name: "Vérification de la version de Dynatrace OneAgent"
  ansible.builtin.shell: |
    /apps/dynatrace/oneagent/agent/tools/oneagentctl --version
  register: dynatrace_version
  changed_when: false
  when: dynatrace_agent_check.stat.exists

- name: "Affichage de la version Dynatrace"
  ansible.builtin.debug:
    msg:
      - "Version Dynatrace: {{ dynatrace_version.stdout if dynatrace_version.stdout is defined else 'Non disponible' }}"
  when: dynatrace_agent_check.stat.exists

- name: "Vérification du statut de l'agent Dynatrace"
  ansible.builtin.shell: |
    /apps/dynatrace/oneagent/agent/tools/oneagentctl status
  register: dynatrace_status
  changed_when: false
  failed_when: false
  when: dynatrace_agent_check.stat.exists

- name: "Affichage du statut Dynatrace"
  ansible.builtin.debug:
    msg: "{{ dynatrace_status.stdout_lines if dynatrace_status.stdout_lines is defined else ['Statut non disponible'] }}"
  when: dynatrace_agent_check.stat.exists

- name: "Vérification si l'agent Dynatrace est actif"
  ansible.builtin.set_fact:
    dynatrace_is_running: "{{ 'running' in dynatrace_status.stdout | lower if dynatrace_status.stdout is defined else false }}"
  when: dynatrace_agent_check.stat.exists

- name: "Démarrage de l'agent Dynatrace si arrêté"
  ansible.builtin.shell: |
    /apps/dynatrace/oneagent/agent/tools/oneagentctl start
  register: dynatrace_start
  when:
    - dynatrace_agent_check.stat.exists
    - not (dynatrace_is_running | default(false))
  ignore_errors: yes

- name: "Affichage du résultat de démarrage Dynatrace"
  ansible.builtin.debug:
    msg:
      - "=== Résultat démarrage Dynatrace ==="
      - "{{ dynatrace_start.stdout_lines if dynatrace_start.stdout_lines is defined else ['Déjà en cours d\\'exécution'] }}"
  when:
    - dynatrace_agent_check.stat.exists
    - dynatrace_start is defined

- name: "Vérification du mode de connexion Dynatrace (FullStack)"
  ansible.builtin.shell: |
    /apps/dynatrace/oneagent/agent/tools/oneagentctl --get-mode
  register: dynatrace_mode
  changed_when: false
  failed_when: false
  when: dynatrace_agent_check.stat.exists

- name: "Affichage du mode Dynatrace"
  ansible.builtin.debug:
    msg:
      - "Mode Dynatrace: {{ dynatrace_mode.stdout if dynatrace_mode.stdout is defined else 'Non disponible' }}"
      - "Mode attendu: FullStack"
  when: dynatrace_agent_check.stat.exists

- name: "Vérification de la connexion au serveur Dynatrace"
  ansible.builtin.shell: |
    /apps/dynatrace/oneagent/agent/tools/oneagentctl --get-server
  register: dynatrace_server
  changed_when: false
  failed_when: false
  when: dynatrace_agent_check.stat.exists

- name: "Affichage du serveur Dynatrace"
  ansible.builtin.debug:
    msg:
      - "Serveur Dynatrace: {{ dynatrace_server.stdout if dynatrace_server.stdout is defined else 'Non configuré' }}"
  when: dynatrace_agent_check.stat.exists

- name: "Vérification du statut final de l'agent Dynatrace"
  ansible.builtin.shell: |
    /apps/dynatrace/oneagent/agent/tools/oneagentctl status
  register: dynatrace_final_status
  changed_when: false
  failed_when: false
  when: dynatrace_agent_check.stat.exists

- name: "Affichage du statut final Dynatrace"
  ansible.builtin.debug:
    msg:
      - "=== Statut final Dynatrace ==="
      - "{{ dynatrace_final_status.stdout_lines if dynatrace_final_status.stdout_lines is defined else ['Statut non disponible'] }}"
  when: dynatrace_agent_check.stat.exists

- name: "Enregistrement du résultat de vérification Dynatrace"
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: >-
      {% if not dynatrace_agent_check.stat.exists %}
      not installed
      {% elif dynatrace_is_running | default(false) or (dynatrace_start is defined and dynatrace_start.rc == 0) %}
      running
      {% else %}
      stopped
      {% endif %}
    set_results_item: "dynatrace"
    set_results_value: >-
      {% if not dynatrace_agent_check.stat.exists %}
      Agent Dynatrace non installé
      {% else %}
      Version: {{ dynatrace_version.stdout | default('N/A') }}, Mode: {{ dynatrace_mode.stdout | default('N/A') }}, Serveur: {{ dynatrace_server.stdout | default('N/A') }}
      {% endif %}
    set_results_component: "{{ dynatrace_component | default('dynatrace') }}"
    set_results_operation: "{{ dynatrace_operation | default('check') }}"
    set_results_role_name: "{{ dynatrace_role_name | default('ips_toolbox_dynatrace') }}"
    set_results_result_name: "{{ dynatrace_result_name | default('dynatrace_check') }}"
    set_results_status: >-
      {% if not dynatrace_agent_check.stat.exists %}
      KO
      {% elif dynatrace_is_running | default(false) or (dynatrace_start is defined and dynatrace_start.rc == 0) %}
      OK
      {% else %}
      KO
      {% endif %}
  ignore_errors: yes

