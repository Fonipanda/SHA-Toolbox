---
- name: "Vérification de l'installation de Dynatrace OneAgent"
  ansible.builtin.shell: |
    echo "=== Détection Dynatrace OneAgent ==="
    
    # Vérification du service systemd
    if systemctl list-units --all | grep -q oneagent; then
      echo "SERVICE_ONEAGENT_FOUND"
    fi
    
    # Vérification des processus OneAgent
    if ps -ef | grep -i oneagent | grep -v grep >/dev/null; then
      echo "PROCESS_ONEAGENT_FOUND"
    fi
    
    # Vérification du binaire de contrôle
    if [ -f "/opt/dynatrace/oneagent/agent/bin/oneagentctl" ]; then
      echo "BINARY_ONEAGENTCTL_FOUND"
    fi
    
    # Vérification du répertoire d'installation
    if [ -d "/opt/dynatrace/oneagent" ]; then
      echo "DIRECTORY_ONEAGENT_FOUND"
    fi
    
    # Vérification de la configuration Oracle (pour Full Stack)
    if [ -f "/etc/oratab" ] && grep -v "^#" /etc/oratab | grep -v "^$" >/dev/null; then
      echo "ORACLE_INSTANCES_FOUND"
    fi
    
    echo "=== Fin détection Dynatrace ==="
  register: dynatrace_detection
  changed_when: false
  failed_when: false

- name: "Configuration de Dynatrace OneAgent en mode Full Stack"
  ansible.builtin.shell: |
    echo "=== Configuration Dynatrace OneAgent Full Stack ==="
    
    if echo "{{ dynatrace_detection.stdout }}" | grep -q "BINARY_ONEAGENTCTL_FOUND"; then
      echo "Binaire oneagentctl détecté"
      
      # Obtenir le statut actuel
      current_status=$(/opt/dynatrace/oneagent/agent/bin/oneagentctl --get-status 2>/dev/null || echo "Status unknown")
      echo "Statut actuel OneAgent: $current_status"
      
      # Version OneAgent
      version_info=$(/opt/dynatrace/oneagent/agent/bin/oneagentctl --version 2>/dev/null || echo "Version unknown")
      echo "Version OneAgent: $version_info"
      
      # Configuration Full Stack (par défaut activé)
      echo "Configuration mode Full Stack..."
      /opt/dynatrace/oneagent/agent/bin/oneagentctl --set-app-log-content-access=true 2>/dev/null || echo "Configuration app-log-content-access échouée"
      /opt/dynatrace/oneagent/agent/bin/oneagentctl --set-infra-only=false 2>/dev/null || echo "Désactivation infra-only échouée"
      
      # Configuration spécifique Oracle si présent
      if echo "{{ dynatrace_detection.stdout }}" | grep -q "ORACLE_INSTANCES_FOUND"; then
        echo "Configuration surveillance Oracle Database..."
        /opt/dynatrace/oneagent/agent/bin/oneagentctl --set-db-insight=true 2>/dev/null || echo "Configuration db-insight Oracle échouée"
        
        # Lister les instances Oracle détectées
        echo "Instances Oracle détectées:"
        grep -v "^#" /etc/oratab | grep -v "^$" | cut -d: -f1 | head -5
      fi
      
      # Redémarrage du service si nécessaire
      echo "Redémarrage du service OneAgent..."
      systemctl restart oneagent 2>/dev/null || echo "Redémarrage service OneAgent échoué"
      
      # Statut final
      sleep 5
      final_status=$(/opt/dynatrace/oneagent/agent/bin/oneagentctl --get-status 2>/dev/null || echo "Status final unknown")
      echo "Statut final OneAgent: $final_status"
      
    elif echo "{{ dynatrace_detection.stdout }}" | grep -q "SERVICE_ONEAGENT_FOUND"; then
      echo "Service OneAgent détecté sans binaire de contrôle"
      systemctl status oneagent --no-pager --lines=3 2>/dev/null || echo "Impossible d'obtenir le statut du service"
      
      # Tentative de démarrage
      systemctl start oneagent 2>/dev/null || echo "Démarrage du service OneAgent échoué"
      systemctl enable oneagent 2>/dev/null || echo "Activation du service OneAgent échoué"
      
    elif echo "{{ dynatrace_detection.stdout }}" | grep -q "PROCESS_ONEAGENT_FOUND"; then
      echo "Processus OneAgent détectés mais pas de service manageable"
      ps -ef | grep -i oneagent | grep -v grep | head -3
      
    elif echo "{{ dynatrace_detection.stdout }}" | grep -q "DIRECTORY_ONEAGENT_FOUND"; then
      echo "Répertoire OneAgent trouvé mais agent non opérationnel"
      ls -la /opt/dynatrace/oneagent/ 2>/dev/null | head -5
      echo "Configuration manuelle requise"
      
    else
      echo "Aucun composant Dynatrace OneAgent trouvé sur ce serveur"
      echo "Ceci est normal si Dynatrace n'est pas déployé"
      echo "Configuration ignorée sans erreur"
    fi
    
    echo "=== Fin configuration Dynatrace OneAgent ==="
  register: dynatrace_config_result
  changed_when: false
  failed_when: false

- name: "Vérification de la connectivité Dynatrace (si configuré)"
  ansible.builtin.shell: |
    if [ -f "/opt/dynatrace/oneagent/agent/bin/oneagentctl" ]; then
      echo "Test de connectivité Dynatrace..."
      /opt/dynatrace/oneagent/agent/bin/oneagentctl --get-server-info 2>/dev/null || echo "Connectivité serveur Dynatrace non établie"
    fi
  register: dynatrace_connectivity
  changed_when: false
  failed_when: false
  when: "'BINARY_ONEAGENTCTL_FOUND' in dynatrace_detection.stdout"

- name: "Affichage du résumé complet de configuration Dynatrace"
  ansible.builtin.debug:
    msg:
      - "=== RÉSUMÉ DYNATRACE ONEAGENT FULL STACK ==="
      - "Détection:"
      - "{{ dynatrace_detection.stdout_lines | default(['Aucune détection']) }}"
      - ""
      - "Configuration Full Stack:"
      - "{{ dynatrace_config_result.stdout_lines | default(['Aucune configuration']) }}"
      - ""
      - "Connectivité:"
      - "{{ dynatrace_connectivity.stdout_lines | default(['Non testée']) }}"
      - "=== FIN RÉSUMÉ DYNATRACE ==="

- name: "Enregistrement du résultat Dynatrace dans ips_toolbox_set_results"
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_state: "{{ 'OK' if 'BINARY_ONEAGENTCTL_FOUND' in dynatrace_detection.stdout else 'INFO' }}"
    set_results_component: "dynatrace"
    set_results_operation: "configure"
    set_results_value: >-
      {% if 'BINARY_ONEAGENTCTL_FOUND' in dynatrace_detection.stdout %}
      Dynatrace OneAgent Full Stack installé et configuré avec surveillance Oracle
      {% elif 'SERVICE_ONEAGENT_FOUND' in dynatrace_detection.stdout %}
      Service Dynatrace OneAgent détecté
      {% elif 'PROCESS_ONEAGENT_FOUND' in dynatrace_detection.stdout %}
      Processus Dynatrace détectés
      {% else %}
      Dynatrace OneAgent non installé - normal sur serveur sans Dynatrace
      {% endif %}
  ignore_errors: true
