---

- name: stop play when a mandatory variable is missing
  ansible.builtin.assert:
  that:
    - webserver_item != ""
  msg: "webserver_item variable is missing"

- name: "Listing ihs folder"
  shell: find /applis/*/ihs/ -type d -name sw* | awk -F '/' '{print"/"$2"/"$3"/"$4"/"$5}'  | sort -u
  register: ihslist_result
  changed_when: false
  failed_when: false
  when: webserver_item == "all"

- name: "Listing ihs"
  shell: find /applis/*/ihs/ -type d -name sw* | awk -F '/' '{print$5}' | sort -u
  register: ihslist
  changed_when: false
  failed_when: false
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout" 

- name: "control duplicate ihs dir_name"
  shell: find /applis/*/ihs/ -type d -name {{ webserver_item }} | awk -F '/' '{print"/"$2"/"$3"/"$4"/"$5}'  | sort -u | wc -l
  register: ihs_dir_name_count
  changed_when: false
  failed_when: false
  when: webserver_item != "all"

- name: "get ihs dir_name"
  shell: ls -d /applis/*/ihs/{{ webserver_item }}
  register: ihs_dir_name
  changed_when: false
  failed_when: false
  when: 
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"

- name: "copy start script for specific ihs"
  ansible.builtin.copy:
    src: start
    dest: "{{ ihs_dir_name.stdout }}"
    mode: '0755'
  changed_when: false
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''

- name: "Copy start script for all ihs"
  ansible.builtin.copy:
    src: start
    dest: "{{ webserver_loop_item }}"
    mode: '0755'
  changed_when: false
  loop: "{{ ihslist_result.stdout_lines | list }}"
  loop_control:
    loop_var: webserver_loop_item
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout"

- name: "run start script for all ihs"
  script: start_all
  register: ihs_start_all
  changed_when: "'is started' in ihs_start_all.stdout"
  failed_when: "'Error' in ihs_start_all.stdout"
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout"
    - webserver_ref != "yes"

- name: "run start script for all ihs with ref"
  script: start_all_with_ref
  register: ihs_start_all_ref
  changed_when: "'is started' in ihs_start_all_ref.stdout"
  failed_when: "'Error' in ihs_start_all_ref.stdout"
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout"
    - webserver_ref == "yes"

- name: "run start script for specific ihs"
  shell: "{{ ihs_dir_name.stdout }}/start"
  register: ihs_start
  changed_when: "'already' not in ihs_start.stdout"
  failed_when: "'Error' in ihs_start.stdout"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - webserver_ref != "yes"

- name: check ref file
  shell: ls /tmp/ihs_ref_status_stopped_{{ webserver_item }}
  register: check_ref
  failed_when: false
  changed_when: false
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - webserver_ref == "yes"

- name: "run start script for specific ihs with ref"
  shell: "{{ ihs_dir_name.stdout }}/start"
  register: ihs_start_ref
  changed_when: "'already' not in ihs_start_ref.stdout"
  failed_when: "'Error' in ihs_start_ref.stdout"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - webserver_ref == "yes"
    - check_ref.rc != 0
        
- set_fact:
    state_json: "IHS not found"

- set_fact:
    state_value_json: ""

- set_fact:
    state_value_json: "No IHS found"
  when:
    - webserver_item == "all"
    - "'sw' not in ihslist_result.stdout"

- set_fact:
    state_value_json: "{% if line_json.split(' ')[4] != \"started\" %}{{ state_value_json }}, { \"ihs\": \"{{ line_json.split(' ')[2] }}\" ,\"status\": \"not started\" }{% else %}{{ state_value_json }}, { \"ihs\": \"{{ line_json.split(' ')[2] }}\" ,\"status\": \"started\" }{% endif %}"
  loop: "{{ ihs_start_all.stdout_lines | select('match', '.*started.*') | list }}"
  loop_control:
    loop_var: line_json
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout"
    - webserver_ref != "yes"

- set_fact:
    state_value_json: "{% if line_json.split(' ')[4] != \"started\" %}{{ state_value_json }}, { \"ihs\": \"{{ line_json.split(' ')[2] }}\" ,\"status\": \"not started\" }{% else %}{{ state_value_json }}, { \"ihs\": \"{{ line_json.split(' ')[2] }}\" ,\"status\": \"started\" }{% endif %}"
  loop: "{{ ihs_start_all_ref.stdout_lines | select('match', '.*IHS.*') | list }}"
  loop_control:
    loop_var: line_json
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout"
    - webserver_ref == "yes"

- set_fact:
    state_value_json: "started"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - check_ref.rc is defined
    - check_ref.rc != 0
    - "' started' in ihs_start_ref.stdout"

- set_fact:
    state_value_json: "started"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - check_ref.rc is not defined
    - "' started' in ihs_start.stdout"

- set_fact:
    state_value_json: "not started"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - check_ref.rc is defined
    - check_ref.rc == 0

- name: Format to Json
  ansible.builtin.set_fact:
    state_json: "{ \"ihs\": \"{{ webserver_item }}\" ,\"status\": \"{{ state_value_json }}\" }"
  when:
  - webserver_item != "all"
  - " '1' in ihs_dir_name_count.stdout"
  - ihs_dir_name.stderr == ''

- set_fact:
    final_state: "started"
  when: "'not started' not in state_value_json"

- set_fact:
    final_state: "not started"
  when: "'not started' in state_value_json"

- set_fact:
    final_state: "not started"
  when:
    - webserver_item == "all"
    - "'sw' not in ihslist_result.stdout"

- name: set results output
  ansible.builtin.include_role:
    name: ips_toolbox_set_results
  vars:
    set_results_item: "{{ webserver_item }}"
    set_results_component: "{{ webserver_component }}"
    set_results_operation: "{{ webserver_operation }}"
    set_results_role_name: "{{ webserver_role_name }}"
    set_results_result_name: "{{ webserver_result_name }}"
    set_results_state: "{{ final_state }}"
    set_results_status: "OK"
    set_results_value: "\

      {% if webserver_item == 'all' %}\

        {% if 'sw' in ihslist_result.stdout %}\

          [ {{ state_value_json[1:] }} ]\

        {% else %}\

          {{ state_value_json }}\

        {% endif %}\

      {% else %}\

        {{ state_json | to_json | from_json }}\

      {% endif %}"

