---

- name: stop play when a mandatory variable is missing
  assert:
   that:
     - webserver_item != ""
   msg: "webserver_item variable is missing"

- name: "Listing ihs folder"
  shell: find /applis/*/ihs/ -maxdepth 1 -type d -name sw-*
  register: ihslist_result
  changed_when: false
  failed_when: false
  when: webserver_item == "all"

- name: "Listing ihs"
  shell: find /applis/*/ihs/ -maxdepth 1 -type d -name sw-* | awk -F '/' '{print$5}'
  register: ihslist
  changed_when: false
  failed_when: false
  when:
    - webserver_item == "all"
    - "'sw-' in ihslist_result.stdout"

- name: "control duplicate ihs dir_name"
  shell: find /applis/*/ihs/ -type d -name {{ webserver_item }} | awk -F '/' '{print"/"$2"/"$3"/"$4"/"$5}'  | sort -u | wc -l
  register: ihs_dir_name_count
  changed_when: false
  failed_when: false
  when: webserver_item != "all"

- name: "get ihs dir_name"
  shell: ls -d /applis/*/ihs/{{ webserver_item }}
  register: ihs_dir_name
  changed_when: false
  failed_when: false
  when: 
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"

- name: "copy status script for specific ihs"
  copy: 
    src: status
    dest: "{{ ihs_dir_name.stdout }}"
    mode: '0755'
  changed_when: false
  when: 
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''

- name: "Copy status script for all ihs"
  copy: 
    src: status
    dest: "{{ webserver_loop_item }}"
    mode: '0755'
  changed_when: false
  loop: "{{ ihslist_result.stdout_lines | list }}"
  loop_control:
    loop_var: webserver_loop_item
  when: 
    - webserver_item == "all"
    - "'sw-' in ihslist_result.stdout"

- set_fact:
     ref_value: ""

- set_fact:
     ref_value: "ref"
  when:
    - webserver_ref == "yes"

- name: "run status script for all ihs"
  script: ihsmanage_cmd.ksh status all {{ ref_value }}
  register: ihs_status_all
  changed_when: false
  failed_when: "'Error' in ihs_status_all.stdout"
  when:
    - webserver_item == "all"
    - "'sw-' in ihslist_result.stdout"

- name: "run status script for specific ihs"
  script: ihsmanage_cmd.ksh status {{ webserver_item }} {{ ref_value }}
  register: ihs_status
  changed_when: false
  failed_when: "'Error' in ihs_status.stdout"
  when: 
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''

- set_fact:
     state_json: "IHS not found"

- set_fact:
     state_value_json: "" 

- set_fact:
     state_value_json: "No IHS found"
  when:
    - webserver_item == "all"
    - "'sw-' not in ihslist_result.stdout"

- set_fact:
     state_value_json: "{% if line_json.split(' ')[-1] != \"service\" %}{{ state_value_json }}, { \"ihs\": \"{{ line_json.split(' ')[2] }}\" ,\"service\": \"no\" ,\"status\": \"{% if line_json.split(' ')[4] == \"STARTED\" %}started\"{% else %}stopped\"{% endif %} }{% else %}{{ state_value_json }}, { \"ihs\": \"{{ line_json.split(' ')[2] }}\" ,\"service\": \"{{ line_json.split(' ')[6] }}\" ,\"status\": \"{% if line_json.split(' ')[4] == \"STARTED\" %}started\"{% else %}stopped\"{% endif %} }{% endif %}"
  loop: "{{ ihs_status_all.stdout_lines | select('match', '.*The IHS.*') | list }}"
  loop_control:
    loop_var: line_json
  when:
    - webserver_item == "all"
    - "'sw' in ihslist_result.stdout"

- set_fact:
     state_value_json: "started"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - "'is STARTED' in ihs_status.stdout"

- set_fact:
     state_value_json: "stopped"
  when:
    - webserver_item != "all"
    - " '1' in ihs_dir_name_count.stdout"
    - ihs_dir_name.stderr == ''
    - "'is STOPPED' in ihs_status.stdout"

- name: Format to Json
  set_fact:
    state_json: "{ \"ihs\": \"{{ webserver_item }}\" , \"service\": \"no\", \"status\": \"{{ state_value_json }}\" }"
  when:
   - webserver_item != "all"
   - " '1' in ihs_dir_name_count.stdout"
   - ihs_dir_name.stderr == ''
   - "'systemd service' not in ihs_status.stdout"

- name: Format to Json
  set_fact:
    state_json: "{ \"ihs\": \"{{ webserver_item }}\" , \"service\": \"{{ ihs_status.stdout.split(' ')[6] }}\", \"status\": \"{{ state_value_json }}\" }"
  when:
   - webserver_item != "all"
   - " '1' in ihs_dir_name_count.stdout"
   - ihs_dir_name.stderr == ''
   - "'systemd service' in ihs_status.stdout"


- name: set results output
  include_role:
    name: ips_toolbox_set_results
  vars:
     set_results_item: "{{ webserver_item }}"
     set_results_component: "{{ webserver_component }}"
     set_results_operation: "{{ webserver_operation }}"
     set_results_role_name: "{{ webserver_role_name }}"
     set_results_result_name: "{{ webserver_result_name }}"
     set_results_state: "info"
     set_results_status: "OK"
     set_results_value: "\

      {% if webserver_item == 'all' %}\

         {% if 'sw-' in ihslist_result.stdout %}\

           [ {{ state_value_json[1:] }} ]\

         {% else %}\

           {{ state_value_json }}\

         {% endif %}\

      {% else %}\

         {{ state_json | to_json | from_json }}\

      {% endif %}"

