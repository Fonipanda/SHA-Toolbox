---
# Create standard application arborescence

- name: Validate arborescence parameters
  assert:
    that:
      - codeap is defined
      - codescar is defined
      - codeap is match(codeap_pattern)
      - codescar is match(codescar_pattern)
    fail_msg: "CodeAP must be 5 digits and CodeScar must be 5 alphanumeric characters"

- name: Set application identifiers
  set_fact:
    app_identifier: "{{ codeap }}-{{ codescar }}{{ ('-' + id) if id is defined else '' }}"
    app_base_path: "{{ sha_applis_path }}/{{ codeap }}-{{ codescar }}{{ ('-' + id) if id is defined else '' }}"
    app_log_path: "{{ sha_applis_logs_path }}/{{ codeap }}-{{ codescar }}{{ ('-' + id) if id is defined else '' }}"
    app_delivery_path: "{{ sha_applis_delivery_path }}/{{ codeap }}-{{ codescar }}{{ ('-' + id) if id is defined else '' }}"

- name: Create base filesystems for application
  include_tasks: manage_filesystem.yml
  vars:
    filesystem_action: create
    lv_name: "{{ item.lv }}"
    mount_point: "{{ item.mount }}"
    size: "{{ item.size }}"
    vg_name: "{{ vg_apps }}"
  loop:
    - { lv: "lv_{{ codescar }}{{ ('-' + id) if id is defined else '' }}", mount: "{{ app_base_path }}", size: "{{ fs_default_sizes.appli_base }}" }
    - { lv: "lv_{{ codescar }}_tmp", mount: "{{ app_base_path }}/tmp", size: "{{ fs_default_sizes.appli_tmp }}" }
    - { lv: "lv_{{ codescar }}_arch", mount: "{{ app_base_path }}/archives", size: "{{ fs_default_sizes.appli_archives }}" }
    - { lv: "lv_{{ codescar }}{{ ('-' + id) if id is defined else '' }}_ti", mount: "{{ app_base_path }}/transfer/in", size: "{{ fs_default_sizes.appli_transfer_in }}" }
    - { lv: "lv_{{ codescar }}{{ ('-' + id) if id is defined else '' }}_to", mount: "{{ app_base_path }}/transfer/out", size: "{{ fs_default_sizes.appli_transfer_out }}" }
    - { lv: "lv_log_{{ codescar }}{{ ('-' + id) if id is defined else '' }}", mount: "{{ app_log_path }}", size: "{{ fs_default_sizes.logs }}" }
    - { lv: "lv_dlv_{{ codescar }}{{ ('-' + id) if id is defined else '' }}", mount: "{{ app_delivery_path }}", size: "{{ fs_default_sizes.delivery }}" }
  when: create_filesystems | default(true) | bool

- name: Create standard application directories
  file:
    path: "{{ app_base_path }}/{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
  loop: "{{ standard_appli_dirs }}"

- name: Create WebSphere directory if needed
  file:
    path: "{{ app_base_path }}/{{ websphere_type }}"
    state: directory
    mode: '0755'
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
  when: websphere_type is defined and websphere_type in websphere_types

- name: Create IHS directory if needed
  file:
    path: "{{ app_base_path }}/ihs"
    state: directory
    mode: '0755'
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
  when: create_ihs_dir | default(false) | bool

- name: Create log subdirectories
  file:
    path: "{{ app_log_path }}/{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
  loop:
    - delivery
    - "{{ websphere_type | default('was') }}"
    - ihs
  when: item != 'ihs' or create_ihs_dir | default(false) | bool

- name: Create delivery version directory structure
  file:
    path: "{{ app_delivery_path }}/{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ application_user }}"
    group: "{{ application_group }}"
  loop:
    - "{{ version | default('1.0') }}"

- name: Create symbolic link to current version
  file:
    src: "{{ app_delivery_path }}/{{ version | default('1.0') }}"
    dest: "{{ app_delivery_path }}/current"
    state: link
    owner: "{{ application_user }}"
    group: "{{ application_group }}"

- name: Create exploit arborescence
  file:
    path: "{{ sha_exploit_path }}/{{ fonction }}/{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop: "{{ standard_exploit_dirs }}"
  when: fonction is defined

- name: Display arborescence summary
  debug:
    msg:
      - "Application arborescence created successfully"
      - "Application ID: {{ app_identifier }}"
      - "Base Path: {{ app_base_path }}"
      - "Log Path: {{ app_log_path }}"
      - "Delivery Path: {{ app_delivery_path }}"
