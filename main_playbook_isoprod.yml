# main_playbook_isoprod.yml
# Main playbook pour environnement ISO-PRODUCTION (avec bloc rescue conforme)
---
- name: "SHA Application Environment Builder - ISO-PRODUCTION"
  hosts: "{{ hostname | default('all') }}"
  gather_facts: true
  become: true
  serial: 1

  vars:
    environment_type: "ISOPROD"
    code_ap: "{{ CodeAP }}"
    code5car: "{{ code5car }}"
    hostname_target: "{{ Hostname }}"
    execution_timestamp: "{{ ansible_date_time.iso8601 }}"
    execution_id: "{{ ansible_date_time.epoch }}"
    report_dir: "/tmp/ansible_reports"
    validation_level: "medium"
    allow_testing_features: true

  pre_tasks:
    - name: "[ISOPROD] Validation des variables obligatoires"
      ansible.builtin.assert:
        that:
          - CodeAP is defined and CodeAP != ""
          - code5car is defined and code5car != ""
          - Hostname is defined and Hostname != ""
        fail_msg: "Les variables CodeAP, code5car et Hostname sont obligatoires"
      tags: [validation]

    - name: "[ISOPROD] Création du répertoire de rapport"
      ansible.builtin.file:
        path: "{{ report_dir }}"
        state: directory
        mode: '0755'
      tags: [setup]

    - name: "[ISOPROD] Initialisation du rapport d'exécution"
      ansible.builtin.set_fact:
        execution_report:
          environment: "{{ environment_type }}"
          hostname: "{{ hostname_target }}"
          code_ap: "{{ code_ap }}"
          code5car: "{{ code5car }}"
          execution_id: "{{ execution_id }}"
          start_time: "{{ execution_timestamp }}"
          detected_os: ""
          detected_middleware: []
          filesystem_changes: []
          installed_packages: []
          created_users: []
          modified_configs: []
          services_status: []
          errors: []
          warnings: []
      tags: [setup]

  tasks:
    - name: "[ISOPROD] Pipeline principal avec gestion d'échec"
      block:
        # Toutes vos étapes principales ISOPROD, même structure que PROD adapté à ISOPROD…
        # (Utilisez le pattern ci-dessus : bloc + rescue, adaptez les variables, tags et conditions,
        # collez ici la logique métier spécifique ISOPROD…)
        - name: "[ISOPROD] ... (Identique à production, voir PROD ci-dessus, adapter les phases/services/options)"

      rescue:
        - name: "[ISOPROD] Gestion des erreurs et rollback"
          block:
            - name: "[ISOPROD] Enregistrement de l'erreur"
              ansible.builtin.set_fact:
                execution_report: "{{ execution_report | combine({
                  'errors': execution_report.errors + [ansible_failed_result.msg | default('Erreur inconnue')],
                  'success': false,
                  'end_time': ansible_date_time.iso8601
                }) }}"

            - name: "[ISOPROD] Génération du rapport d'erreur"
              ansible.builtin.include_role:
                name: report_generator
                tasks_from: generate_json

            - name: "[ISOPROD] Affichage de l'erreur"
              ansible.builtin.debug:
                msg: |
                  =========================================================
                  ERREUR - ENVIRONNEMENT ISO-PRODUCTION
                  =========================================================
                  Une erreur s'est produite lors du déploiement.
                  Consulter le rapport JSON pour plus de détails.
                  Rapport : {{ report_dir }}/execution_report_{{ execution_id }}.json
                  =========================================================

            - name: "[ISOPROD] Échec du playbook"
              ansible.builtin.fail:
                msg: "Déploiement échoué en environnement ISO-PRODUCTION"
