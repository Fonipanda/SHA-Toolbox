# main_playbook_prod.yml
---
- name: "SHA Application Environment Builder - PRODUCTION"
  hosts: "{{ Hostname | default('all') }}"
  gather_facts: true
  become: true
  serial: 1

  vars:
    environment_type: "PROD"
    code_ap: "{{ CodeAP }}"
    code5car: "{{ code5car }}"
    hostname_target: "{{ Hostname }}"
    execution_timestamp: "{{ ansible_date_time.iso8601 }}"
    execution_id: "{{ ansible_date_time.epoch }}"
    report_dir: "/tmp/ansible_reports"

  pre_tasks:
    - name: "[PROD] Validation des variables obligatoires"
      ansible.builtin.assert:
        that:
          - CodeAP is defined and CodeAP != ""
          - code5car is defined and code5car != ""
          - Hostname is defined and Hostname != ""
        fail_msg: "Les variables CodeAP, code5car et Hostname sont obligatoires"
    - name: "[PROD] Création du répertoire de rapport"
      ansible.builtin.file:
        path: "{{ report_dir }}"
        state: directory
        mode: '0755'
    - name: "[PROD] Initialisation du rapport d'exécution"
      ansible.builtin.set_fact:
        execution_report:
          environment: "{{ environment_type }}"
          hostname: "{{ hostname_target }}"
          code_ap: "{{ code_ap }}"
          code5car: "{{ code5car }}"
          execution_id: "{{ execution_id }}"
          start_time: "{{ execution_timestamp }}"
          detected_os: ""
          detected_middleware: []
          filesystem_changes: []
          installed_packages: []
          created_users: []
          modified_configs: []
          services_status: []
          errors: []
          warnings: []

  tasks:
    - name: "Bloc principal avec gestion d'échec"
      block:
        # ===== PHASE 1 : DÉTECTION =====
        - name: "[PROD] Détection de l'OS et collecte des faits système"
          ansible.builtin.include_role:
            name: app_environment_builder
            tasks_from: detect_os
        - name: "[PROD] Détection du middleware installé"
          ansible.builtin.include_role:
            name: app_environment_builder
            tasks_from: detect_middleware
        - name: "[PROD] Mise à jour du rapport avec les détections"
          ansible.builtin.set_fact:
            execution_report: "{{ execution_report | combine({
                'detected_os': detected_os_info,
                'detected_middleware': detected_middleware_list
              }) }}"

        # ===== PHASE 2 : SAUVEGARDE =====
        - name: "[PROD] Création du point de rollback"
          ansible.builtin.include_role:
            name: backup_manager
            tasks_from: create_rollback_point
          vars:
            backup_type: "pre_deployment"

        # ===== PHASE 3 : CONSTRUCTION DE L'ENVIRONNEMENT =====
        - name: "[PROD] Vérification de la conformité du serveur"
          ansible.builtin.include_role:
            name: ips_toolbox_system
          vars:
            system_operation: "check_conformity"
        - name: "[PROD] Création de l'arborescence applicative"
          ansible.builtin.include_role:
            name: app_environment_builder
            tasks_from: create_app_structure
          vars:
            target_codeap: "{{ code_ap }}"
            target_code5car: "{{ code5car }}"
        - name: "[PROD] Configuration spécifique AIX"
          ansible.builtin.include_role:
            name: app_environment_builder
            tasks_from: aix_setup
          when: detected_os_info.family == "AIX"
        - name: "[PROD] Configuration spécifique RHEL"
          ansible.builtin.include_role:
            name: app_environment_builder
            tasks_from: rhel_setup
          when: detected_os_info.family == "RedHat"
        - name: "[PROD] Configuration spécifique Windows"
          ansible.builtin.include_role:
            name: app_environment_builder
            tasks_from: windows_setup
          when: detected_os_info.family == "Windows"

        # ===== PHASE 4 : MIDDLEWARES =====
        - name: "[PROD] Configuration des middlewares (WAS ND/Base, Liberty, IHS, Oracle, ...)"
          block:
            - name: "[PROD] Configuration WebSphere WAS ND"
              ansible.builtin.include_role:
                name: ips_toolbox_wasnd
              when: "'WebSphere_WAS_ND' in detected_middleware_list"
            - name: "[PROD] Configuration WebSphere WAS Base"
              ansible.builtin.include_role:
                name: ips_toolbox_wasbase
              when: "'WebSphere_WAS_Base' in detected_middleware_list"
            - name: "[PROD] Configuration Liberty Core"
              ansible.builtin.include_role:
                name: ips_toolbox_libertycore
              when: "'Liberty_Core' in detected_middleware_list"
            - name: "[PROD] Configuration Liberty Base"
              ansible.builtin.include_role:
                name: ips_toolbox_libertybase
              when: "'Liberty_Base' in detected_middleware_list"
            - name: "[PROD] Configuration IHS"
              ansible.builtin.include_role:
                name: ips_toolbox_webserver
              when: "'IHS' in detected_middleware_list"
            - name: "[PROD] Configuration Oracle"
              ansible.builtin.include_role:
                name: ips_toolbox_oracle
              when: "'Oracle' in detected_middleware_list"
            - name: "[PROD] Configuration SQL Server"
              ansible.builtin.include_role:
                name: ips_toolbox_sqlserver
              when: "'SQLServer' in detected_middleware_list"
            - name: "[PROD] Configuration MQ Series"
              ansible.builtin.include_role:
                name: ips_toolbox_mq
              when: "'MQSeries' in detected_middleware_list"
            - name: "[PROD] Configuration CFT"
              ansible.builtin.include_role:
                name: ips_toolbox_cft
              when: "'CFT' in detected_middleware_list"

        # ===== PHASE 5 : SERVICES SYSTÈME =====
        - name: "[PROD] Configuration Toolbox système"
          ansible.builtin.include_role:
            name: ips_toolbox_toolboxes
        - name: "[PROD] Configuration sauvegarde TSM"
          ansible.builtin.include_role:
            name: ips_toolbox_backup
          vars:
            backup_operation: "configure_appli_backup"
            backup_codeap: "{{ code_ap }}"
            backup_code5car: "{{ code5car }}"
        - name: "[PROD] Configuration Illumio (si présent)"
          ansible.builtin.include_role:
            name: ips_toolbox_illumio
          when: "'Illumio' in detected_middleware_list"
        - name: "[PROD] Configuration des services applicatifs"
          ansible.builtin.include_role:
            name: ips_toolbox_services

        # ===== PHASE 6 : VÉRIFICATIONS =====
        - name: "[PROD] Vérification de l'arborescence créée"
          ansible.builtin.stat:
            path: "/applis/{{ code_ap }}-{{ code5car }}"
          register: appli_dir_check
        - name: "[PROD] Vérification des filesystems"
          ansible.builtin.shell: |
            df -h | grep "/applis/{{ code_ap }}-{{ code5car }}"
          register: filesystem_check
          failed_when: false
          changed_when: false
        - name: "[PROD] Test des scripts applicatifs"
          ansible.builtin.stat:
            path: "/etc/local/app_{{ code5car }}_status"
          register: appli_scripts_check

        # ===== PHASE 7 : RAPPORT FINAL =====
        - name: "[PROD] Collecte des informations finales"
          ansible.builtin.include_role:
            name: report_generator
            tasks_from: collect_facts
        - name: "[PROD] Génération du rapport JSON"
          ansible.builtin.include_role:
            name: report_generator
            tasks_from: generate_json
        - name: "[PROD] Génération du résumé stdout"
          ansible.builtin.include_role:
            name: report_generator
            tasks_from: generate_stdout
        - name: "[PROD] Affichage du résumé d'exécution"
          ansible.builtin.debug:
            msg: |
              =========================================================
              RÉSUMÉ D'EXÉCUTION - ENVIRONNEMENT PRODUCTION
              =========================================================
              Serveur cible    : {{ hostname_target }}
              Code AP          : {{ code_ap }}
              Code5car         : {{ code5car }}
              OS détecté       : {{ detected_os_info.distribution | default('N/A') }} {{ detected_os_info.version | default('') }}
              Middleware       : {{ detected_middleware_list | join(', ') if detected_middleware_list else 'Aucun' }}
              Statut           : {{ 'SUCCÈS' if deployment_success | default(true) else 'ÉCHEC' }}
              Rapport JSON     : {{ report_dir }}/execution_report_{{ execution_id }}.json
              =========================================================
      rescue:
        - name: "Gestion des erreurs et rollback"
          block:
            - name: "Enregistrement de l'erreur"
              ansible.builtin.set_fact:
                execution_report: "{{ execution_report | combine({
                  'errors': execution_report.errors + [ansible_failed_result.msg | default('Erreur inconnue')],
                  'success': false,
                  'end_time': ansible_date_time.iso8601
                }) }}"
            - name: "Génération du rapport d'erreur"
              ansible.builtin.include_role:
                name: report_generator
                tasks_from: generate_json
            - name: "Affichage de l'erreur"
              ansible.builtin.debug:
                msg: |
                  =========================================================
                  ERREUR - ENVIRONNEMENT PRODUCTION
                  =========================================================
                  Une erreur s'est produite lors du déploiement.
                  Consulter le rapport JSON pour plus de détails.
                  Rapport : {{ report_dir }}/execution_report_{{ execution_id }}.json
                  =========================================================
            - name: "Échec du playbook"
              ansible.builtin.fail:
                msg: "Déploiement échoué en environnement PRODUCTION"